name: Python checks 🐍

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/**"
      - "movie-catalog/**"

jobs:
  run-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install black
        run: |
          python -m pip install --upgrade pip
          pip install "black==25.1.0"

      - name: Black
        run: black --check --diff ./

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Run ruff check --diff
        uses: astral-sh/ruff-action@v3
        with:
          args: check --diff
          version-file: "pyproject.toml"

      - name: Run ruff check
        uses: astral-sh/ruff-action@v3
        with:
          version-file: "pyproject.toml"

      - name: Run mypy
        run: uv run mypy movie-catalog

  run-tests:
    runs-on: ubuntu-latest
    needs:
      - run-checks
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Run python tests
        run: uv run pytest movie-catalog --cov=movie-catalog --cov-report=xml:coverage.xml
        env:
          TESTING: 1
          REDIS_PORT: 6379

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          dry_run: ${{ env.ACT }}
          fail_ci_if_error: 'true'
